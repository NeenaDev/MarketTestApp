{"version":3,"sources":["Market/tableRow.js","Market/marketTable.js","Components/dropDown.js","axios.js","Actions/marketActions.js","Actions/actionTypes.js","Market/marketPage.js","App.js","Reducers/marketReducers.js","Reducers/index.js","index.js"],"names":["tableRow","this","props","onDeleteEvent","data","disabled","className","cellData","value","cmc_rank","id","type","symbol","quote","USD","price","onClick","bind","size","color","React","Component","TableCell","marketTable","onSort","column","e","direction","state","sort","sortedData","a","b","reverse","setState","setArrow","onRowDel","marketDataRows","map","obj","key","length","Fragment","dropDown","rops","displayMenu","showDropdownMenu","hideDropdownMenu","event","preventDefault","document","addEventListener","removeEventListener","dropDownItems","onChange","label","axiosblue","axios","create","baseURL","getMarketQuotes","ids","dispatch","get","toString","then","res","markeQuotesData","Object","values","marketQuotes","catch","error","getMarketQuotesFail","marketPage","marketTableData","marketDropdownListData","push","index","indexOf","splice","item","selectedSymbol","removeSymbolFromDropdown","filter","getMarketData","nextProps","marketData","totalNumOfRecords","slice","handleAddEvent","handleRowDel","connect","marketIds","getId","console","log","getMarketDataSuccess","getMarketDataFail","actions","App","initialState","getMarketDataStart","action","loading","getMarketQuotesStart","getMarketQuotesSuccess","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","marketReducers","store","createStore","applyMiddleware","logger","thunk","WithRouterApp","withRouter","app","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3b21413e.chunk.js","sourcesContent":["import React from 'react';\nimport { FaTrashAlt } from \"react-icons/fa\";\n\nexport default class tableRow extends React.Component {\n    onDeleteEvent() {\n        this.props.onDeleteEvent(this.props.data);\n\n    }\n    render() {\n        const {data,disabled } = this.props;\n        \n        return (\n            <tr className=\"eachRow\">\n                <TableCell  cellData={{\n                    \"type\": \"rank\",\n                    value: (data.cmc_rank !== null) ? data.cmc_rank : \"N/A\",\n                    id: data.id\n                }} />\n                <TableCell  cellData={{\n                    type: \"symbol\",\n                    value: data.symbol,\n                    id: data.id\n                }} />\n                <TableCell cellData={{\n                    type: \"price\",\n                    value: data.quote.USD.price,\n                    id: data.id\n                }} />\n                <td className=\"deleteCell\">\n                    <FaTrashAlt className={`deleteBtn ${disabled && \"disableDeleteBtn\"}`} onClick={this.onDeleteEvent.bind(this)} size={17} color={\"#3f83ab\"}/>\n                </td>\n            </tr>\n        );\n\n    }\n\n}\nexport class TableCell extends React.Component {\n\n    render() {\n        return (\n            <td>\n                <div  id={this.props.cellData.id} >{this.props.cellData.value}</div>\n            </td>\n        );\n\n    }\n\n}","import React, { Component } from 'react';\nimport TableRow from './tableRow';\n\n\nexport default class marketTable extends Component {\n    constructor(props) {\n\n        super();\n        this.state = {\n            sort: {\n                column: null,\n                direction: 'desc',\n            }\n        };\n    }\n\n    onSort = (column) => (e) => {\n        const direction = this.state.sort.column ? (this.state.sort.direction === 'asc' ? 'desc' : 'asc') : 'desc';\n        const sortedData = this.props.data.sort((a, b) => {\n            if (column === 'rank') {\n                return a.cmc_rank - b.cmc_rank;\n            } else {\n                return a.price - b.price;\n            }\n        });\n\n        if (direction === 'desc') {\n            sortedData.reverse();\n        }\n\n        this.setState({\n            data: sortedData,\n            sort: {\n                column,\n                direction,\n            }\n        });\n    };\n    setArrow = (column) => {\n\n        let className = 'sort-direction';\n        if (this.state.sort.column === column) {\n            className += this.state.sort.direction === 'asc' ? ' asc' : ' desc';\n        }\n\n        return className;\n    };\n\n    render() {\n\n        const { data, onRowDel } = this.props;\n        \n        const marketDataRows = data.map(obj => {\n            return <TableRow \n                    data={obj} \n                    key={obj.id} \n                    onDeleteEvent={onRowDel.bind(this)} \n                    disabled={(data.length === 1 ? true : false)}\n                />\n        });\n\n        return (\n            <React.Fragment>\n\n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th className={this.setArrow('rank')} onClick={this.onSort('rank')}>CMC Rank\n                            </th>\n                            <th>Symbol</th>\n                            <th className={this.setArrow('price')} onClick={this.onSort('price')}>Price</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {marketDataRows}\n\n                    </tbody>\n\n                </table>\n\n            </React.Fragment>\n        )\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport './dropDown.scss';\n\nexport default class dropDown extends Component {\n    constructor(rops) {\n        super();\n        this.state = {\n            displayMenu: false\n        };\n        this.showDropdownMenu = this.showDropdownMenu.bind(this);\n        this.hideDropdownMenu = this.hideDropdownMenu.bind(this);\n    }\n    showDropdownMenu(event) {\n        event.preventDefault();\n        this.setState({ displayMenu: true }, () => {\n            document.addEventListener('click', this.hideDropdownMenu);\n        });\n    }\n\n    hideDropdownMenu() {\n        this.setState({ displayMenu: false }, () => {\n          document.removeEventListener('click', this.hideDropdownMenu);\n        });\n    \n      }\n\n    render() {\n\n        const dropDownItems = this.props.data.map(data => {\n            return <li key={data.id} onClick={()=>this.props.onChange(data)}>{data.symbol}</li>\n        });\n        return (\n            <React.Fragment>\n                \n                <div className=\"dropDownContainer\">\n                    <div className=\"dropdown\"  >\n                    <div className=\"button\" onClick={this.showDropdownMenu}>{this.props.label}</div>\n                        {this.state.displayMenu ? (\n                            <ul>\n                                {dropDownItems}\n                            </ul>\n                        ) :\n                            (\n                                null\n                            )\n                        }\n\n                    </div>\n                </div>    \n\n            </React.Fragment>\n\n        );\n    }\n}","import axios from 'axios';\n\nconst axiosblue = axios.create({\n  baseURL: 'https://www.stackadapt.com/coinmarketcap/',\n \n  \n});\nexport default axiosblue;","import * as actionTypes from './actionTypes';\nimport axios from '../axios';\n\nexport const getMarketDataSuccess = ( marketData ) => {\n\n    return {\n        type: actionTypes.GET_MARKET_DATA_SUCCESS,\n        marketData: marketData\n    };\n};\n\nexport const getMarketDataFail = ( error ) => {\n    return {\n        type: actionTypes.GET_MARKET_DATA_FAIL,\n        error: error\n    };\n};\n\nexport const getMarketDataStart = () => {\n    return {\n        type: actionTypes.GET_MARKET_DATA_REQUEST\n    };\n};\nexport const getMarketQuotesSuccess = ( marketQuotes ) => {\n\n    return {\n        type: actionTypes.GET_MARKET_QUOTES_SUCCESS,\n        marketQuotes: marketQuotes\n    };\n};\n\nexport const getMarketQuotesFail = ( error ) => {\n    return {\n        type: actionTypes.GET_MARKET_QUOTES_FAIL,\n        error: error\n    };\n};\n\nexport const getMarketQuotesStart = () => {\n    return {\n        type: actionTypes.GET_MARKET_QUOTES_REQUEST\n    };\n};\n\n\n\nexport const getMarketData = () => {\n    \n    return dispatch => {\n        dispatch( getMarketDataStart() );\n        axios.get( `map`)\n            .then( res => {\n                \n                let marketData = [];\n                let marketIds = [];\n                const totalNumOfRecords = 10; // Fetch num of records from map call\n                \n                marketData = res.data.data.slice(0, totalNumOfRecords); \n                const getId = marketData.map(obj => {\n                    return marketIds.push(obj.id);\n                });\n                console.log(getId);\n                dispatch(getMarketDataSuccess(marketData));\n                dispatch(getMarketQuotes(marketIds));\n              \n            } )\n            .catch( error => {\n                dispatch(getMarketDataFail(error));\n            } );\n    };\n};\n\n\nexport const getMarketQuotes = (ids) => {\n    \n    return dispatch => {\n        dispatch( getMarketQuotesStart() );\n        axios.get( `/quotes?id=${ids.toString()}`)\n            .then( res => {\n                \n                let markeQuotesData = [];\n                markeQuotesData = Object.values(res.data.data);\n                dispatch(getMarketQuotesSuccess(markeQuotesData));\n              \n            } )\n            .catch( error => {\n                dispatch(getMarketQuotesFail(error));\n            } );\n    };\n};\n","export const INIT = \"@@INIT\";\n\nexport const GET_MARKET_DATA_REQUEST = 'GET_MARKET_DATA_REQUEST';\nexport const GET_MARKET_DATA_SUCCESS = 'GET_MARKET_DATA_SUCCESS';\nexport const GET_MARKET_DATA_FAIL = 'GET_MARKET_DATA_FAIL';\n\nexport const GET_MARKET_QUOTES_REQUEST = 'GET_MARKET_QUOTES_REQUEST';\nexport const GET_MARKET_QUOTES_SUCCESS = 'GET_MARKET_QUOTES_SUCCESS';\nexport const GET_MARKET_QUOTES_FAIL = 'GET_MARKET_QUOTES_FAIL';\n\n","import React, { Component } from 'react';\nimport MarketTable from './marketTable';\nimport Dropdown from '../Components/dropDown'\nimport * as actions from '../Actions/index';\nimport { connect } from 'react-redux';\nimport './marketPage.scss'\n\nclass marketPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            marketTableData: [],\n            marketDropdownListData: [],\n            \n        };\n    }\n\n    handleRowDel(data) {\n        // For adding item which is deleted from table\n        this.state.marketDropdownListData.push(data);\n        this.setState(this.state.marketDropdownListData);\n\n        var index = this.state.marketTableData.indexOf(data);\n        this.state.marketTableData.splice(index, 1);\n        this.setState(this.state.marketTableData);\n\n    };\n\n    handleAddEvent(item) {\n        \n        let selectedSymbol = item;\n  \n        this.state.marketTableData.push(selectedSymbol);\n        this.setState(this.state.marketTableData);\n          const removeSymbolFromDropdown = this.state.marketDropdownListData.filter(obj => {\n            return obj.symbol !== selectedSymbol.symbol\n        });\n        this.setState({marketDropdownListData: removeSymbolFromDropdown});\n    }\n\n    componentDidMount() {\n        this.props.getMarketData();\n\n    }\n    componentDidUpdate(nextProps) {\n        \n        const { marketData } = this.props\n\n        if (nextProps.marketData !== marketData) {\n          \n            if (marketData) {\n                const totalNumOfRecords = marketData.length ;  // Total no of records to be fetch.\n                const numOfEntriesInTable = 5;\n                let marketTableData = marketData.slice(0, numOfEntriesInTable);\n                let marketDropdownListData = marketData.slice(numOfEntriesInTable, totalNumOfRecords);\n                this.setState({\n                    marketTableData: marketTableData,\n                    marketDropdownListData: marketDropdownListData\n                })\n            }\n        }\n    }\n    render() {\n       \n        return (\n            <div className=\"wrapper\">\n                    <div className=\"header\"></div>\n                    <div className=\"content\">\n                    <Dropdown\n                        data={this.state.marketDropdownListData}\n                        label={\"Select Symbol\"}\n                        onChange={this.handleAddEvent.bind(this)}\n                    />\n                    <MarketTable\n                        onRowDel={this.handleRowDel.bind(this)}\n                        data={this.state.marketTableData}\n                    />\n                </div>    \n            </div>\n        );\n\n    }\n\n}\nconst mapStateToProps = state => {\n    return {\n        marketData: state.marketData.marketQuotes,\n       // marketQuotes: state.marketData.marketQuotes\n    };\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getMarketData: () => dispatch(actions.getMarketData()),\n        getMarketQuotes: (ids) => dispatch(actions.getMarketQuotes())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(marketPage);\n","import React from 'react';\nimport MarketPage from './Market/marketPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MarketPage />\n    </div>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../Actions/actionTypes';\n\nconst initialState = {\n   marketData : [],\n   marketQuotes: []\n\n};\n\nconst getMarketDataStart = ( state, action ) => {\n    return state;\n};\nconst getMarketDataSuccess = ( state, action ) => {\n    return ( state, {\n        marketData: action.marketData,\n        loading: false\n    } );\n};\nconst getMarketDataFail = ( state, action ) => {\n    return ( state, { loading: false, error: action.error } );\n};\n\nconst getMarketQuotesStart = ( state, action ) => {\n    return state;\n};\nconst getMarketQuotesSuccess = ( state, action ) => {\n    return ( state, {\n        marketQuotes: action.marketQuotes,\n        loading: false\n    } );\n};\nconst getMarketQuotesFail = ( state, action ) => {\n    return ( state, { loading: false, error: action.error } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n\n        case actionTypes.GET_MARKET_DATA_REQUEST: return getMarketDataStart( state, action );\n        case actionTypes.GET_MARKET_DATA_SUCCESS: return getMarketDataSuccess( state, action );\n        case actionTypes.GET_MARKET_DATA_FAIL: return getMarketDataFail( state, action );\n\n        case actionTypes.GET_MARKET_QUOTES_REQUEST: return getMarketQuotesStart( state, action );\n        case actionTypes.GET_MARKET_QUOTES_SUCCESS: return getMarketQuotesSuccess( state, action );\n        case actionTypes.GET_MARKET_QUOTES_FAIL: return getMarketQuotesFail( state, action );\n        \n        default: return state;\n    }\n};\n\nexport default reducer;","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport marketReducers from './marketReducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    marketData: marketReducers\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './Reducers';\n\n//import * as serviceWorker from './serviceWorker';\n\nconst WithRouterApp = withRouter(App);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <WithRouterApp />\n        </BrowserRouter>\n    </Provider>\n);\n\n\nReactDOM.render(app  , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}